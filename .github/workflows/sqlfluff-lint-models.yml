name: "SQLFluff lint"

on:
  pull_request:
    branches:
      - 'main'

jobs:
  sqlfluff-lint-models:
    name: Run linting flow
    runs-on: ubuntu-latest

    # Set environment variables used throughout workflow
    env:
      DBT_PROFILES_DIR: /home/runner/work/${{ github.event.repository.name }}/${{ github.event.repository.name }}/.github/sqlfluff

      # SPECIFY database connection credentials as env vars below.
      # Env var values to be fetched from as GitHub Secrets.
      # HIGHLY recommended you use a unique set of connection credentials for this workflow alone.
      PROFILES_YML_BIGQUERY_DATASET: ${{ secrets.PROFILES_YML_BIGQUERY_DATASET }}
      PROFILES_YML_BIGQUERY_CREDENTIALS: ${{ secrets.PROFILES_YML_BIGQUERY_CREDENTIALS }}

    steps:
      - name: Checkout branch
        uses: actions/checkout@v2

      - name: Install Python packages
        # NB: This is referencing the requirements.txt file saved in the ci_cd folder in your project.
        run: python -m pip install dbt-snowflake~=1.0.0 sqlfluff-templater-dbt

      - name: Test database connection
        run: dbt debug

      - name: Install dbt packages
        run: dbt deps

      - name: Generate client secrets
        run: |
          touch ./.secrets/client_secrets.json
          echo "$GOOGLE_APPLICATION_CREDENTIALS" >> ./.secrets/client_secrets.json
        shell: bash

      - name: Get changed files
        id: get_file_changes
        uses: trilom/file-changes-action@v1.2.4
        with:
          output: ' '

      - name: Get new and changed .sql files in /data_warehouse to lint
        id: get_files_to_lint
        shell: bash -l {0}
        run: |
          # Set the command in the $() brackets as an output to use in later steps
          echo "::set-output name=lintees::$(
          # Issue where grep regular expressions don't work as expected on the
          # Github Actions shell, check dbt/models/ folder
          echo \
          $(echo ${{ steps.get_file_changes.outputs.files_modified }} |
          tr -s ' ' '\n' |
          grep -E '^models.*[.]sql$' |
          tr -s '\n' ' ') \
          $(echo ${{ steps.get_file_changes.outputs.files_added }} |
          tr -s ' ' '\n' |
          grep -E '^models.*[.]sql$' |
          tr -s '\n' ' ')
          )"

      - name: Lint dbt models
        if: steps.get_files_to_lint.outputs.lintees != ''
        shell: bash -l {0}
        run: |
          sqlfluff lint --format github-annotation --annotation-level failure --nofail ${{ steps.get_files_to_lint.outputs.lintees }} --write-output annotations.json

      - name: Annotate
        uses: yuzutech/annotations-action@v0.3.0
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
          title: "SQLFluff Lint"
          input: "./annotations.json"
